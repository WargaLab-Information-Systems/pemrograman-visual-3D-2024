/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Praktikum3;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.util.ArrayList; 
import java.util.List;     

/**
 *
 * @author LUKMAN
 */
public class Praktikum32 extends javax.swing.JFrame {
    private DefaultTableModel model;
    private int hargaSPP = 200000;

    /**
     * Creates new form Praktikum32
     */
    public Praktikum32() {
        initComponents();
        model = (DefaultTableModel) jTable1.getModel();
        setLocationRelativeTo(null);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        patas = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        pbawah = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        ptengah = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        anama = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        anim = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        atotal = new javax.swing.JTextField();
        ajumlah = new javax.swing.JTextField();
        akembalian = new javax.swing.JTextField();
        pjumlah = new javax.swing.JButton();
        pbayar = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        a12 = new javax.swing.JCheckBox();
        a8 = new javax.swing.JCheckBox();
        a1 = new javax.swing.JCheckBox();
        a4 = new javax.swing.JCheckBox();
        a10 = new javax.swing.JCheckBox();
        a2 = new javax.swing.JCheckBox();
        a9 = new javax.swing.JCheckBox();
        a3 = new javax.swing.JCheckBox();
        a11 = new javax.swing.JCheckBox();
        a6 = new javax.swing.JCheckBox();
        a7 = new javax.swing.JCheckBox();
        a5 = new javax.swing.JCheckBox();
        areset = new javax.swing.JButton();
        pkeluar = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 388, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 288, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        patas.setBackground(new java.awt.Color(0, 204, 204));

        jLabel1.setFont(new java.awt.Font("Malgun Gothic", 1, 24)); // NOI18N
        jLabel1.setText("Universitas Fire ball");
        patas.add(jLabel1);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Praktikum3/fireball-removebg-preview.png"))); // NOI18N
        patas.add(jLabel4);

        getContentPane().add(patas, java.awt.BorderLayout.PAGE_START);

        pbawah.setLayout(new java.awt.GridLayout(1, 0));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "BULAN", "STATUS"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        pbawah.add(jScrollPane1);

        getContentPane().add(pbawah, java.awt.BorderLayout.PAGE_END);

        ptengah.setBackground(new java.awt.Color(153, 255, 51));
        ptengah.setLayout(new java.awt.GridBagLayout());

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Nama");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        ptengah.add(jLabel2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        ptengah.add(anama, gridBagConstraints);

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("NIM");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        ptengah.add(jLabel3, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        ptengah.add(anim, gridBagConstraints);

        jLabel5.setText("Jumlah");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        ptengah.add(jLabel5, gridBagConstraints);

        jLabel6.setText("Kembalian");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        ptengah.add(jLabel6, gridBagConstraints);

        atotal.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        ptengah.add(atotal, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        ptengah.add(ajumlah, gridBagConstraints);

        akembalian.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        ptengah.add(akembalian, gridBagConstraints);

        pjumlah.setText("Jumlah Total");
        pjumlah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pjumlahActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        ptengah.add(pjumlah, gridBagConstraints);

        pbayar.setText("Bayar");
        pbayar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pbayarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        ptengah.add(pbayar, gridBagConstraints);

        jLabel7.setText("BULAN");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        ptengah.add(jLabel7, gridBagConstraints);

        a12.setText("DESEMBER");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        ptengah.add(a12, gridBagConstraints);

        a8.setText("AGUSTUS");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        ptengah.add(a8, gridBagConstraints);

        a1.setText("JANUARI");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        ptengah.add(a1, gridBagConstraints);

        a4.setText("APRIL");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        ptengah.add(a4, gridBagConstraints);

        a10.setText("OKTOBER");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        ptengah.add(a10, gridBagConstraints);

        a2.setText("FEBRUARI");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        ptengah.add(a2, gridBagConstraints);

        a9.setText("SEPTEMBER");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        ptengah.add(a9, gridBagConstraints);

        a3.setText("MARET");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        ptengah.add(a3, gridBagConstraints);

        a11.setText("JUNI");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        ptengah.add(a11, gridBagConstraints);

        a6.setText("NOVEMBER");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        ptengah.add(a6, gridBagConstraints);

        a7.setText("JULI");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        ptengah.add(a7, gridBagConstraints);

        a5.setText("MEI");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        ptengah.add(a5, gridBagConstraints);

        areset.setText("Reset");
        areset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aresetActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 2;
        ptengah.add(areset, gridBagConstraints);

        pkeluar.setText("Keluar");
        pkeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pkeluarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 4;
        ptengah.add(pkeluar, gridBagConstraints);

        getContentPane().add(ptengah, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pjumlahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pjumlahActionPerformed
        // TODO add your handling code here:
    if (anama.getText().trim().isEmpty()) {
        JOptionPane.showMessageDialog(this, "Isi dulu Nama.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    if (anim.getText().trim().isEmpty()) {
        JOptionPane.showMessageDialog(this, "Isi dulu Nomor.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    List<String> bulanDipilih = new ArrayList<>();
    if (a1.isSelected()) bulanDipilih.add("Januari");
    if (a2.isSelected()) bulanDipilih.add("Februari");
    if (a3.isSelected()) bulanDipilih.add("Maret");
    if (a4.isSelected()) bulanDipilih.add("April");
    if (a5.isSelected()) bulanDipilih.add("Mei");
    if (a6.isSelected()) bulanDipilih.add("Juni");
    if (a7.isSelected()) bulanDipilih.add("Juli");
    if (a8.isSelected()) bulanDipilih.add("Agustus");
    if (a9.isSelected()) bulanDipilih.add("September");
    if (a10.isSelected()) bulanDipilih.add("Oktober");
    if (a11.isSelected()) bulanDipilih.add("November");
    if (a12.isSelected()) bulanDipilih.add("Desember");

    if (bulanDipilih.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Pilih setidaknya satu bulan.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    int totalBulan = bulanDipilih.size();
    
    int totalSPP = totalBulan * hargaSPP;

    atotal.setText(String.valueOf(totalSPP)); 

    StringBuilder infoBulan = new StringBuilder("Bulan yang dipilih:");
    for (String bulan : bulanDipilih) {
        infoBulan.append(bulan).append("\n");
    }
    infoBulan.append("Total pembayaran: ").append(totalSPP).append(" Rupiah");

    JOptionPane.showMessageDialog(this, infoBulan.toString(), "Informasi Pembayaran", JOptionPane.INFORMATION_MESSAGE);

    ajumlah.setText("");
    }//GEN-LAST:event_pjumlahActionPerformed

    private void pbayarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pbayarActionPerformed
        // TODO add your handling code here:                                      
        if (anama.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Isi dulu Nama.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (anim.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Isi dulu Nomor.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String totalSPPStr = atotal.getText().trim();
        if (totalSPPStr.isEmpty() || totalSPPStr.equals("0")) {
            JOptionPane.showMessageDialog(this, "Totalkan terlebih dahulu jumlah yang dibayar.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String jumlahStr = ajumlah.getText().trim();
        if (jumlahStr.isEmpty() || jumlahStr.equals("0")) {
            JOptionPane.showMessageDialog(this, "Isi dulu Jumlah.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int jumlah;
        try {
            jumlah = Integer.parseInt(jumlahStr); 
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Isikan dengan nominal atau angka.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int totalBulan = 0;
        List<String> bulanDipilih = new ArrayList<>();
        List<String> bulanMenunggak = new ArrayList<>();

        if (a1.isSelected()) { totalBulan++; bulanDipilih.add("Januari"); }
        if (a2.isSelected()) { totalBulan++; bulanDipilih.add("Februari"); }
        if (a3.isSelected()) { totalBulan++; bulanDipilih.add("Maret"); }
        if (a4.isSelected()) { totalBulan++; bulanDipilih.add("April"); }
        if (a5.isSelected()) { totalBulan++; bulanDipilih.add("Mei"); }
        if (a6.isSelected()) { totalBulan++; bulanDipilih.add("Juni"); }
        if (a7.isSelected()) { totalBulan++; bulanDipilih.add("Juli"); }
        if (a8.isSelected()) { totalBulan++; bulanDipilih.add("Agustus"); }
        if (a9.isSelected()) { totalBulan++; bulanDipilih.add("September"); }
        if (a10.isSelected()) { totalBulan++; bulanDipilih.add("Oktober"); }
        if (a11.isSelected()) { totalBulan++; bulanDipilih.add("November"); }
        if (a12.isSelected()) { totalBulan++; bulanDipilih.add("Desember"); }

        int totalSPP = totalBulan * hargaSPP;  
        atotal.setText(String.valueOf(totalSPP));

        List<String> bulanSudahDibayar = new ArrayList<>();
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

        for (String bulan : bulanDipilih) {
            boolean sudahLunas = false;
            for (int i = 0; i < model.getRowCount(); i++) {
                Object bulanDiTabelObj = model.getValueAt(i, 0);
                Object statusDiTabelObj = model.getValueAt(i, 1);
                if (bulanDiTabelObj != null && statusDiTabelObj != null) {
                    String bulanDiTabel = bulanDiTabelObj.toString();
                    String statusDiTabel = statusDiTabelObj.toString();
                    if (bulan.equals(bulanDiTabel) && statusDiTabel.equals("Sudah Lunas")) {
                        sudahLunas = true;
                        bulanSudahDibayar.add(bulan);
                        break;
                    }
                }
            }
            if (!sudahLunas) {
                bulanMenunggak.add(bulan);
            }
        }

        int sisaSaldo = jumlah;
        String status;

        for (String bulan : bulanMenunggak) {
            if (sisaSaldo >= hargaSPP) {  
                sisaSaldo -= hargaSPP;
                status = "Sudah Lunas";
            } else {
                status = "Menunggak";
            }

            boolean bulanSudahAda = false;
            for (int i = 0; i < model.getRowCount(); i++) {
                Object bulanDiTabelObj = model.getValueAt(i, 0);
                if (bulan.equals(bulanDiTabelObj)) {
                    bulanSudahAda = true;
                    model.setValueAt(status, i, 1);
                    break;
                }
            }

            if (!bulanSudahAda) {
                model.addRow(new Object[]{bulan, status});
            }
            if (status.equals("Sudah Lunas")){
                switch (bulan) {
                    case "Januari": a1.setEnabled(false); break;
                    case "Februari": a2.setEnabled(false); break;
                    case "Maret": a3.setEnabled(false); break;
                    case "April": a4.setEnabled(false); break;
                    case "Mei": a5.setEnabled(false); break;
                    case "Juni": a6.setEnabled(false); break;
                    case "Juli": a7.setEnabled(false); break;
                    case "Agustus": a8.setEnabled(false); break;
                    case "September": a9.setEnabled(false); break;
                    case "Oktober": a10.setEnabled(false); break;
                    case "November": a11.setEnabled(false); break;
                    case "Desember": a12.setEnabled(false); break;
                }
            }
        }   

        if (sisaSaldo > 0) {
            akembalian.setText(String.valueOf(sisaSaldo));
        } else if (sisaSaldo == 0) {
            akembalian.setText("Uang pas");
        } else {
            akembalian.setText("Uang tidak cukup untuk melunasi semua bulan menunggak.");
        }
        
        atotal.setText("");
        StringBuilder statusTabel = new StringBuilder("Status Pembayaran:\n");
        for (int i = 0; i < model.getRowCount(); i++) {
            Object bulanDiTabel = model.getValueAt(i, 0);
            Object statusDiTabel = model.getValueAt(i, 1);
            if (bulanDiTabel != null && statusDiTabel != null) {
                statusTabel.append(bulanDiTabel.toString()).append(": ").append(statusDiTabel.toString()).append("\n");
            }
        }
        JOptionPane.showMessageDialog(this, statusTabel.toString(), "Status Tabel", JOptionPane.INFORMATION_MESSAGE);

    }//GEN-LAST:event_pbayarActionPerformed

    private void aresetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aresetActionPerformed
        // TODO add your handling code here:
        anama.setText("");
        anim.setText("");
        atotal.setText("");
        ajumlah.setText("");
        akembalian.setText("");
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel(); model.setRowCount(0);
        a1.setEnabled(true);
        a2.setEnabled(true);
        a3.setEnabled(true);
        a4.setEnabled(true);
        a5.setEnabled(true);
        a6.setEnabled(true);
        a7.setEnabled(true);
        a8.setEnabled(true);
        a9.setEnabled(true);
        a10.setEnabled(true);
        a11.setEnabled(true);
        a12.setEnabled(true);
        a1.setSelected(false);
        a2.setSelected(false);
        a3.setSelected(false);
        a4.setSelected(false);
        a5.setSelected(false);
        a6.setSelected(false);
        a7.setSelected(false);
        a8.setSelected(false);
        a9.setSelected(false);
        a10.setSelected(false);
        a11.setSelected(false);
        a12.setSelected(false);

    }//GEN-LAST:event_aresetActionPerformed

    private void pkeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pkeluarActionPerformed
        // TODO add your handling code here:
        int result = JOptionPane.showConfirmDialog(this,
            "Keluar Program",
            "Keluar",
            JOptionPane.YES_NO_OPTION);
        if (result == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_pkeluarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Praktikum32.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Praktikum32.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Praktikum32.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Praktikum32.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Praktikum32().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox a1;
    private javax.swing.JCheckBox a10;
    private javax.swing.JCheckBox a11;
    private javax.swing.JCheckBox a12;
    private javax.swing.JCheckBox a2;
    private javax.swing.JCheckBox a3;
    private javax.swing.JCheckBox a4;
    private javax.swing.JCheckBox a5;
    private javax.swing.JCheckBox a6;
    private javax.swing.JCheckBox a7;
    private javax.swing.JCheckBox a8;
    private javax.swing.JCheckBox a9;
    private javax.swing.JTextField ajumlah;
    private javax.swing.JTextField akembalian;
    private javax.swing.JTextField anama;
    private javax.swing.JTextField anim;
    private javax.swing.JButton areset;
    private javax.swing.JTextField atotal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JPanel patas;
    private javax.swing.JPanel pbawah;
    private javax.swing.JButton pbayar;
    private javax.swing.JButton pjumlah;
    private javax.swing.JButton pkeluar;
    private javax.swing.JPanel ptengah;
    // End of variables declaration//GEN-END:variables
}
